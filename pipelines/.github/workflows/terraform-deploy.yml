name: 'Terraform AKS Deployment'

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'terraform/**'
      - 'pipelines/.github/workflows/terraform-deploy.yml'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'terraform/**'
      - 'pipelines/.github/workflows/terraform-deploy.yml'
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

env:
  TF_VERSION: '1.5.0'
  AZURE_CLI_VERSION: '2.53.0'
  TERRAFORM_DIR: 'terraform'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    
    # Use environment for production deployments
    environment: ${{ github.event.inputs.environment || 'dev' }}
    
    defaults:
      run:
        working-directory: ${{ env.TERRAFORM_DIR }}

    steps:
    - name: 'Checkout'
      uses: actions/checkout@v4

    - name: 'Setup Azure CLI'
      uses: azure/setup-azure-cli@v3
      with:
        version: ${{ env.AZURE_CLI_VERSION }}

    - name: 'Azure Login'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        enable-AzPSSession: true

    - name: 'Setup Terraform'
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: 'Terraform Format Check'
      run: terraform fmt -check -recursive
      continue-on-error: true

    - name: 'Terraform Init'
      run: terraform init

    - name: 'Terraform Validate'
      run: terraform validate

    - name: 'Terraform Plan'
      id: plan
      run: |
        terraform plan \
          -var-file="terraform.tfvars" \
          -out=tfplan
      continue-on-error: true

    - name: 'Update Pull Request'
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      env:
        PLAN: "${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Plan ðŸ“‹
          \`\`\`\n
          ${process.env.PLAN || 'No changes. Infrastructure is up-to-date.'}
          \`\`\`
          
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: 'Terraform Apply'
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve tfplan

    - name: 'Terraform Apply (Manual)'
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply'
      run: |
        terraform apply \
          -var-file="terraform.tfvars" \
          -auto-approve

    - name: 'Terraform Destroy (Manual)'
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
      run: |
        terraform destroy \
          -var-file="terraform.tfvars" \
          -auto-approve

    - name: 'Get AKS Credentials'
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        az aks get-credentials \
          --resource-group $(terraform output -raw resource_group_name) \
          --name $(terraform output -raw cluster_name) \
          --overwrite-existing

    - name: 'Verify Cluster Status'
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        kubectl cluster-info
        kubectl get nodes
        kubectl get pods -n kube-system

    - name: 'Upload Terraform Plan'
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: terraform-plan
        path: ${{ env.TERRAFORM_DIR }}/tfplan
        retention-days: 30 